import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,f as t}from"./app-uJW8EvoO.js";const s={},i=t('<p>上篇文章讲到使用MySQL的Explain命令可以分析SQL性能瓶颈，优化SQL查询，以及查看是否用到了索引。 我们都知道创建索引可以提高查询效率，但是具体该怎么创建索引？ 哪些字段适合创建索引？ 哪些字段又不适合创建索引？ 本文跟大家一块学习一下如何创建合适数据库索引。</p><h2 id="_1-mysql索引的分类" tabindex="-1"><a class="header-anchor" href="#_1-mysql索引的分类"><span>1. MySQL索引的分类</span></a></h2><p>在创建索引之前了解一下MySQL有哪些索引，然后我们才能选择合适的索引。 常见的索引有，普通索引、唯一索引、主键索引、联合索引、全文索引等。</p><h3 id="普通索引" tabindex="-1"><a class="header-anchor" href="#普通索引"><span>普通索引</span></a></h3><p>普通索引就是最基本的索引，没有任何限制。 可以使用命令创建普通索引：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ALTER TABLE `table_name` ADD INDEX index_name (`column`);\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="唯一索引" tabindex="-1"><a class="header-anchor" href="#唯一索引"><span>唯一索引</span></a></h3><p>与普通索引不同，唯一索引的列值必须唯一，允许为null。 创建方式是这样的：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ALTER TABLE `table_name` ADD UNIQUE index_name (`column`);\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="主键索引" tabindex="-1"><a class="header-anchor" href="#主键索引"><span>主键索引</span></a></h3><p>主键索引是一种特殊的唯一索引，并且一张表只有一个主键，不允许为null。 创建方式是这样的：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ALTER TABLE `table_name` ADD PRIMARY KEY (`column`);\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="联合索引" tabindex="-1"><a class="header-anchor" href="#联合索引"><span>联合索引</span></a></h3><p>联合索引是同时在多个字段上创建索引，查询效率更高。 创建方式是这样的：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ALTER TABLE `table_name` ADD INDEX index_name (`column1`, `column2`, `column3`);\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="全文索引" tabindex="-1"><a class="header-anchor" href="#全文索引"><span>全文索引</span></a></h3><p>全文索引主要用来匹配字符串文本中关键字。 当需要字符串中是否包含关键字的时候，我们一般用like，如果是以%开头的时候，则无法用到索引，这时候就可以使用全文索引了。 创建方式是这样的：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>table_name<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> FULLTEXT <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>column<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-哪些字段适合创建索引" tabindex="-1"><a class="header-anchor" href="#_2-哪些字段适合创建索引"><span>2. 哪些字段适合创建索引？</span></a></h2><p>我总结了有以下几条：</p><h3 id="_2-1-频繁查询的字段适合创建索引" tabindex="-1"><a class="header-anchor" href="#_2-1-频繁查询的字段适合创建索引"><span>2.1 频繁查询的字段适合创建索引</span></a></h3><p>一张表的字段总会有冷热之分，很明显那些频繁使用的字段更适合为它创建索引。</p><h3 id="_2-2-在where和on条件出现的字段优先创建索引" tabindex="-1"><a class="header-anchor" href="#_2-2-在where和on条件出现的字段优先创建索引"><span>2.2 在where和on条件出现的字段优先创建索引</span></a></h3><p>为什么不是在select后面出现的字段优先创建索引？ 因为查询SQL会先匹配on和where条件的字段，具体的匹配顺序是这样的：</p><blockquote><p>from &gt; on &gt; join &gt; where &gt; group by &gt; having &gt; select &gt; distinct &gt; order by &gt; limit</p></blockquote><h3 id="_2-3-区分度高的字段适合创建索引" tabindex="-1"><a class="header-anchor" href="#_2-3-区分度高的字段适合创建索引"><span>2.3 区分度高的字段适合创建索引</span></a></h3><p>比如对于一张用户表来说，生日比性别的区分度更高，更适合创建索引。 可以使用下面的方式手动统计一下，每个字段的区分度，值越大，区分度越高：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> \n    <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">distinct</span> birthday<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> \n    <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">distinct</span> gender<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> \n<span class="token keyword">from</span> <span class="token keyword">user</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://cdn.nlark.com/yuque/0/2023/png/12651402/1686488340317-0f9261e0-28d4-4b0a-9900-30b7d2249d90.png#averageHue=%23f3f3f2&amp;clientId=u1727f877-ba97-4&amp;from=paste&amp;height=442&amp;id=ub38b938f&amp;originHeight=442&amp;originWidth=902&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=120413&amp;status=done&amp;style=none&amp;taskId=uc1009c72-8610-49c8-9d3a-4a265cf6d9a&amp;title=&amp;width=902" alt="image-20220730230017044.png" loading="lazy"> 对于已经创建好的索引，我们还可以使用MySQL命令查看每个索引的区分度排名： <img src="https://cdn.nlark.com/yuque/0/2023/png/12651402/1686488349659-4786a1ee-e0b4-4f6e-ab94-9ce480796b1d.png#averageHue=%23eeeeed&amp;clientId=u1727f877-ba97-4&amp;from=paste&amp;height=518&amp;id=ucedd2cd6&amp;originHeight=518&amp;originWidth=2048&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=259138&amp;status=done&amp;style=none&amp;taskId=u5c991eb6-b8ce-4400-8aaf-bdefd44ce5d&amp;title=&amp;width=2048" alt="image-20220730230358758.png" loading="lazy"> 图中<strong>Cardinality</strong>列表示索引的区分度排名，也被称为基数。</p><h3 id="_2-4-有序的字段适合创建索引" tabindex="-1"><a class="header-anchor" href="#_2-4-有序的字段适合创建索引"><span>2.4 有序的字段适合创建索引</span></a></h3><p>有序的字段在插入数据库的过程中，仍能保持B+树的索引结构，不需要频繁更新索引文件，性能更好。</p><h2 id="_3-哪些字段不合适创建索引" tabindex="-1"><a class="header-anchor" href="#_3-哪些字段不合适创建索引"><span>3. 哪些字段不合适创建索引？</span></a></h2><p>说完哪些字段适合创建索引，就有不适合创建索引的的字段。</p><h3 id="_3-1-区分度低的字段不适合创建索引。" tabindex="-1"><a class="header-anchor" href="#_3-1-区分度低的字段不适合创建索引。"><span>3.1 区分度低的字段不适合创建索引。</span></a></h3><p>刚才说了用户表中性别的区分度较低，不如生日字段适合创建索引。</p><h3 id="_3-2-频繁更新的字段不适合创建索引" tabindex="-1"><a class="header-anchor" href="#_3-2-频繁更新的字段不适合创建索引"><span>3.2 频繁更新的字段不适合创建索引</span></a></h3><p>更新字段的过程中，需要维护B+树结构，会频繁更新索引文件，降低SQL性能。</p><h3 id="_3-3-过长的字段不适合创建索引" tabindex="-1"><a class="header-anchor" href="#_3-3-过长的字段不适合创建索引"><span>3.3 过长的字段不适合创建索引</span></a></h3><p>过长的字段会占用更多的空间，不适合创建索引。</p><h3 id="_3-4-无序的字段不适合创建索引" tabindex="-1"><a class="header-anchor" href="#_3-4-无序的字段不适合创建索引"><span>3.4 无序的字段不适合创建索引</span></a></h3><p>无序的字段在插入数据库的过程中，为了维护B+树索引结构，需要频繁更新索引文件，性能较差。</p><h2 id="_4-创建索引的其他注意事项" tabindex="-1"><a class="header-anchor" href="#_4-创建索引的其他注意事项"><span>4. 创建索引的其他注意事项</span></a></h2><h3 id="_4-1-优先使用联合索引" tabindex="-1"><a class="header-anchor" href="#_4-1-优先使用联合索引"><span>4.1 优先使用联合索引</span></a></h3><p>查询的时候，联合索引比普通索引能更精准的匹配到所需数据。 <img src="https://cdn.nlark.com/yuque/0/2023/png/12651402/1686488360837-5d4347df-cc1b-4602-a302-0316e4dd612b.png#averageHue=%23e2e9e1&amp;clientId=u1727f877-ba97-4&amp;from=paste&amp;height=826&amp;id=u8705fe7f&amp;originHeight=826&amp;originWidth=1382&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=417493&amp;status=done&amp;style=none&amp;taskId=uc85c8199-e083-4653-8bb9-16fe806e508&amp;title=&amp;width=1382" alt="image-20220730232213888.png" loading="lazy"> 图中就是在（age，name）两个字段上建立的联合索引，在B+树中的存储结构。 可以看出，是先age排序，age相等的数据，再按name排序。 对于这条查询SQL：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>select age,name from user where age=18 and name=&#39;李四&#39;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>联合索引只需一次就可以查到所需数据，如果我们只在age字段上建立索引，会先匹配到age=18的三条数据，然后再逐个遍历，效率更差，所以平时应该优先使用联合索引。</p><h3 id="_4-2-使用联合索引时-区分度高的字段放前面" tabindex="-1"><a class="header-anchor" href="#_4-2-使用联合索引时-区分度高的字段放前面"><span>4.2 使用联合索引时，区分度高的字段放前面</span></a></h3><p>这样可以减少查询次数，更快地匹配到所需数据。</p><h3 id="_4-3-过长字符串可以使用前缀索引" tabindex="-1"><a class="header-anchor" href="#_4-3-过长字符串可以使用前缀索引"><span>4.3 过长字符串可以使用前缀索引</span></a></h3><p>比如在匹配用户地址的时候，如果乡镇已经能区分大部分用户了，就没必要精确到街道小区了。 创建普通索引的时候，指定索引长度，就可以创建前缀索引了。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>user<span class="token punctuation">`</span></span> <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span> idx_address <span class="token punctuation">(</span>address<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-4-值唯一的字段-使用唯一索引" tabindex="-1"><a class="header-anchor" href="#_4-4-值唯一的字段-使用唯一索引"><span>4.4 值唯一的字段，使用唯一索引</span></a></h3><p>使用唯一索引，可以避免程序bug导致产生重复数据。</p><h3 id="_4-5-排序和分组字段也尽量创建索引" tabindex="-1"><a class="header-anchor" href="#_4-5-排序和分组字段也尽量创建索引"><span>4.5 排序和分组字段也尽量创建索引</span></a></h3><p>在order by和group by中的字段也尽量创建索引，避免使用文件排序，可以使用索引排序提供性能。</p><h3 id="_4-6-避免创建过多索引" tabindex="-1"><a class="header-anchor" href="#_4-6-避免创建过多索引"><span>4.6 避免创建过多索引</span></a></h3><p>索引好用，适度即可。创建过多的索引，会占用更多存储空间，也会严重影响SQL性能，每次更新SQL，都需要更新大量索引文件，得不偿失。</p><h2 id="知识点总结" tabindex="-1"><a class="header-anchor" href="#知识点总结"><span>知识点总结：</span></a></h2><figure><img src="https://cdn.nlark.com/yuque/0/2023/png/12651402/1686488385450-a17c9796-c70c-4fe2-9437-9e3c65509e4a.png#averageHue=%23fafafa&amp;clientId=u1727f877-ba97-4&amp;from=paste&amp;height=809&amp;id=u0966c71a&amp;originHeight=809&amp;originWidth=701&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=89977&amp;status=done&amp;style=none&amp;taskId=uc2e92162-8ef7-4d10-b8cf-a7d6e4cb074&amp;title=&amp;width=701" alt="image-20220731215809620.png" tabindex="0" loading="lazy"><figcaption>image-20220731215809620.png</figcaption></figure>',59),l=[i];function p(d,r){return a(),n("div",null,l)}const h=e(s,[["render",p],["__file","create.html.vue"]]),u=JSON.parse('{"path":"/mysql/create.html","title":"","lang":"zh-CN","frontmatter":{"description":"上篇文章讲到使用MySQL的Explain命令可以分析SQL性能瓶颈，优化SQL查询，以及查看是否用到了索引。 我们都知道创建索引可以提高查询效率，但是具体该怎么创建索引？ 哪些字段适合创建索引？ 哪些字段又不适合创建索引？ 本文跟大家一块学习一下如何创建合适数据库索引。 1. MySQL索引的分类 在创建索引之前了解一下MySQL有哪些索引，然后我们...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/mysql/create.html"}],["meta",{"property":"og:site_name","content":"Java八股文网"}],["meta",{"property":"og:description","content":"上篇文章讲到使用MySQL的Explain命令可以分析SQL性能瓶颈，优化SQL查询，以及查看是否用到了索引。 我们都知道创建索引可以提高查询效率，但是具体该怎么创建索引？ 哪些字段适合创建索引？ 哪些字段又不适合创建索引？ 本文跟大家一块学习一下如何创建合适数据库索引。 1. MySQL索引的分类 在创建索引之前了解一下MySQL有哪些索引，然后我们..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.nlark.com/yuque/0/2023/png/12651402/1686488340317-0f9261e0-28d4-4b0a-9900-30b7d2249d90.png#averageHue=%23f3f3f2&clientId=u1727f877-ba97-4&from=paste&height=442&id=ub38b938f&originHeight=442&originWidth=902&originalType=binary&ratio=1&rotation=0&showTitle=false&size=120413&status=done&style=none&taskId=uc1009c72-8610-49c8-9d3a-4a265cf6d9a&title=&width=902"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"https://cdn.nlark.com/yuque/0/2023/png/12651402/1686488340317-0f9261e0-28d4-4b0a-9900-30b7d2249d90.png#averageHue=%23f3f3f2&clientId=u1727f877-ba97-4&from=paste&height=442&id=ub38b938f&originHeight=442&originWidth=902&originalType=binary&ratio=1&rotation=0&showTitle=false&size=120413&status=done&style=none&taskId=uc1009c72-8610-49c8-9d3a-4a265cf6d9a&title=&width=902\\",\\"https://cdn.nlark.com/yuque/0/2023/png/12651402/1686488349659-4786a1ee-e0b4-4f6e-ab94-9ce480796b1d.png#averageHue=%23eeeeed&clientId=u1727f877-ba97-4&from=paste&height=518&id=ucedd2cd6&originHeight=518&originWidth=2048&originalType=binary&ratio=1&rotation=0&showTitle=false&size=259138&status=done&style=none&taskId=u5c991eb6-b8ce-4400-8aaf-bdefd44ce5d&title=&width=2048\\",\\"https://cdn.nlark.com/yuque/0/2023/png/12651402/1686488360837-5d4347df-cc1b-4602-a302-0316e4dd612b.png#averageHue=%23e2e9e1&clientId=u1727f877-ba97-4&from=paste&height=826&id=u8705fe7f&originHeight=826&originWidth=1382&originalType=binary&ratio=1&rotation=0&showTitle=false&size=417493&status=done&style=none&taskId=uc85c8199-e083-4653-8bb9-16fe806e508&title=&width=1382\\",\\"https://cdn.nlark.com/yuque/0/2023/png/12651402/1686488385450-a17c9796-c70c-4fe2-9437-9e3c65509e4a.png#averageHue=%23fafafa&clientId=u1727f877-ba97-4&from=paste&height=809&id=u0966c71a&originHeight=809&originWidth=701&originalType=binary&ratio=1&rotation=0&showTitle=false&size=89977&status=done&style=none&taskId=uc2e92162-8ef7-4d10-b8cf-a7d6e4cb074&title=&width=701\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1. MySQL索引的分类","slug":"_1-mysql索引的分类","link":"#_1-mysql索引的分类","children":[{"level":3,"title":"普通索引","slug":"普通索引","link":"#普通索引","children":[]},{"level":3,"title":"唯一索引","slug":"唯一索引","link":"#唯一索引","children":[]},{"level":3,"title":"主键索引","slug":"主键索引","link":"#主键索引","children":[]},{"level":3,"title":"联合索引","slug":"联合索引","link":"#联合索引","children":[]},{"level":3,"title":"全文索引","slug":"全文索引","link":"#全文索引","children":[]}]},{"level":2,"title":"2. 哪些字段适合创建索引？","slug":"_2-哪些字段适合创建索引","link":"#_2-哪些字段适合创建索引","children":[{"level":3,"title":"2.1 频繁查询的字段适合创建索引","slug":"_2-1-频繁查询的字段适合创建索引","link":"#_2-1-频繁查询的字段适合创建索引","children":[]},{"level":3,"title":"2.2 在where和on条件出现的字段优先创建索引","slug":"_2-2-在where和on条件出现的字段优先创建索引","link":"#_2-2-在where和on条件出现的字段优先创建索引","children":[]},{"level":3,"title":"2.3 区分度高的字段适合创建索引","slug":"_2-3-区分度高的字段适合创建索引","link":"#_2-3-区分度高的字段适合创建索引","children":[]},{"level":3,"title":"2.4 有序的字段适合创建索引","slug":"_2-4-有序的字段适合创建索引","link":"#_2-4-有序的字段适合创建索引","children":[]}]},{"level":2,"title":"3. 哪些字段不合适创建索引？","slug":"_3-哪些字段不合适创建索引","link":"#_3-哪些字段不合适创建索引","children":[{"level":3,"title":"3.1 区分度低的字段不适合创建索引。","slug":"_3-1-区分度低的字段不适合创建索引。","link":"#_3-1-区分度低的字段不适合创建索引。","children":[]},{"level":3,"title":"3.2 频繁更新的字段不适合创建索引","slug":"_3-2-频繁更新的字段不适合创建索引","link":"#_3-2-频繁更新的字段不适合创建索引","children":[]},{"level":3,"title":"3.3 过长的字段不适合创建索引","slug":"_3-3-过长的字段不适合创建索引","link":"#_3-3-过长的字段不适合创建索引","children":[]},{"level":3,"title":"3.4 无序的字段不适合创建索引","slug":"_3-4-无序的字段不适合创建索引","link":"#_3-4-无序的字段不适合创建索引","children":[]}]},{"level":2,"title":"4. 创建索引的其他注意事项","slug":"_4-创建索引的其他注意事项","link":"#_4-创建索引的其他注意事项","children":[{"level":3,"title":"4.1 优先使用联合索引","slug":"_4-1-优先使用联合索引","link":"#_4-1-优先使用联合索引","children":[]},{"level":3,"title":"4.2 使用联合索引时，区分度高的字段放前面","slug":"_4-2-使用联合索引时-区分度高的字段放前面","link":"#_4-2-使用联合索引时-区分度高的字段放前面","children":[]},{"level":3,"title":"4.3 过长字符串可以使用前缀索引","slug":"_4-3-过长字符串可以使用前缀索引","link":"#_4-3-过长字符串可以使用前缀索引","children":[]},{"level":3,"title":"4.4 值唯一的字段，使用唯一索引","slug":"_4-4-值唯一的字段-使用唯一索引","link":"#_4-4-值唯一的字段-使用唯一索引","children":[]},{"level":3,"title":"4.5 排序和分组字段也尽量创建索引","slug":"_4-5-排序和分组字段也尽量创建索引","link":"#_4-5-排序和分组字段也尽量创建索引","children":[]},{"level":3,"title":"4.6 避免创建过多索引","slug":"_4-6-避免创建过多索引","link":"#_4-6-避免创建过多索引","children":[]}]},{"level":2,"title":"知识点总结：","slug":"知识点总结","link":"#知识点总结","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.46,"words":1638},"filePathRelative":"mysql/create.md","autoDesc":true}');export{h as comp,u as data};
