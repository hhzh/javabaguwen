import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,f as s}from"./app-M96zHdX9.js";const i={},t=s('<p>工作中，经常遇到这样的问题，我明明在MySQL表上面加了索引，为什么执行SQL查询的时候却没有用到索引？ 同一条SQL有时候查询用到了索引，有时候却没用到索引，这是咋回事？ 原因可能是索引失效了，失效的原因有以下几种，看你有没有踩过类似的坑？</p><h2 id="_1-数据准备" tabindex="-1"><a class="header-anchor" href="#_1-数据准备"><span>1. 数据准备：</span></a></h2><p>有这么一张用户表，在name字段上建个索引：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>CREATE TABLE `user` (\n  `id` int NOT NULL AUTO_INCREMENT COMMENT &#39;主键&#39;,\n  `name` varchar(255) DEFAULT NULL COMMENT &#39;姓名&#39;,\n  `age` int DEFAULT NULL COMMENT &#39;年龄&#39;,\n  PRIMARY KEY (`id`),\n  KEY `idx_name` (`name`)\n) ENGINE=InnoDB COMMENT=&#39;用户表&#39;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-explain详解" tabindex="-1"><a class="header-anchor" href="#_2-explain详解"><span>2. Explain详解：</span></a></h2><p>想要查看一条SQL是否用到索引？用到了哪种类型的索引？ 可以使用<strong>explain</strong>关键字，查看SQL执行计划。例如：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://javabaguwen.com/img/explain详解.png" alt="image-20220629230715808.png" loading="lazy"> 可以看到type=const，表示使用了主键索引。 explain的所有type类型如下： <img src="https://javabaguwen.com/img/explain-type类型.png" alt="image-20220630000000083.png" loading="lazy"></p><h2 id="_3-失效原因" tabindex="-1"><a class="header-anchor" href="#_3-失效原因"><span>3. 失效原因</span></a></h2><h3 id="_1-数据类型隐式转换" tabindex="-1"><a class="header-anchor" href="#_1-数据类型隐式转换"><span>1. 数据类型隐式转换</span></a></h3><p>name字段是varchar类型，如果我们使用数据类型查询，就会产生数据类型转换，虽然不会报错，但是无法用到索引。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">&#39;一灯&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://javabaguwen.com/img/索引隐式转换1.png" alt="image-20220629231442732.png" tabindex="0" loading="lazy"><figcaption>image-20220629231442732.png</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://javabaguwen.com/img/索引隐式转换2.png" alt="image-20220629231513592.png" tabindex="0" loading="lazy"><figcaption>image-20220629231513592.png</figcaption></figure><h3 id="_2-模糊查询-like-以-开头" tabindex="-1"><a class="header-anchor" href="#_2-模糊查询-like-以-开头"><span>2. 模糊查询 like 以%开头</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">&#39;张%&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://javabaguwen.com/img/like1.png" alt="image-20220629231905411.png" tabindex="0" loading="lazy"><figcaption>image-20220629231905411.png</figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">&#39;%张&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://javabaguwen.com/img/like2.png" alt="image-20220629231938893.png" tabindex="0" loading="lazy"><figcaption>image-20220629231938893.png</figcaption></figure><h3 id="_3-or前后没有同时使用索引" tabindex="-1"><a class="header-anchor" href="#_3-or前后没有同时使用索引"><span>3. or前后没有同时使用索引</span></a></h3><p>虽然name字段上加了索引，但是age字段没有索引，使用or的时候会全表扫描。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># or前后没有同时使用索引，导致全表扫描</span>\n<span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">&#39;一灯&#39;</span> <span class="token operator">or</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://javabaguwen.com/img/失效or.png" alt="image-20220629232130791.png" tabindex="0" loading="lazy"><figcaption>image-20220629232130791.png</figcaption></figure><h3 id="_4-联合索引-没有使用第一列索引" tabindex="-1"><a class="header-anchor" href="#_4-联合索引-没有使用第一列索引"><span>4. 联合索引，没有使用第一列索引</span></a></h3><p>如果我们在（name，age）上，建立联合索引，但是查询条件中只用到了age字段，也是无法用到索引的。 使用联合索引，必须遵循最左匹配原则，首先使用第一列字段，然后使用第二列字段。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>CREATE TABLE `user` (\n  `id` int NOT NULL AUTO_INCREMENT COMMENT &#39;主键&#39;,\n  `name` varchar(255) DEFAULT NULL COMMENT &#39;姓名&#39;,\n  `age` int DEFAULT NULL COMMENT &#39;年龄&#39;,\n  PRIMARY KEY (`id`),\n  KEY `idx_name_age` (`name`,`age`)\n) ENGINE=InnoDB COMMENT=&#39;用户表&#39;;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://javabaguwen.com/img/失效联合索引.png" alt="image-20220630000609202.png" tabindex="0" loading="lazy"><figcaption>image-20220630000609202.png</figcaption></figure><h3 id="_5-在索引字段进行计算操作" tabindex="-1"><a class="header-anchor" href="#_5-在索引字段进行计算操作"><span>5. 在索引字段进行计算操作</span></a></h3><p>如果我们在索引列进行了计算操作，也是无法用到索引的。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 在主键索引上进行计算操作，导致全表扫描</span>\n<span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> id<span class="token operator">+</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://javabaguwen.com/img/失效计算.png" alt="image-20220629233208133.png" tabindex="0" loading="lazy"><figcaption>image-20220629233208133.png</figcaption></figure><h3 id="_6-在索引字段字段上使用函数" tabindex="-1"><a class="header-anchor" href="#_6-在索引字段字段上使用函数"><span>6. 在索引字段字段上使用函数</span></a></h3><p>如果我们在索引列使用函数，也是无法用到索引的。 <img src="https://javabaguwen.com/img/失效函数.png" alt="image-20220629233447426.png" loading="lazy"></p><h3 id="_7-优化器选错索引" tabindex="-1"><a class="header-anchor" href="#_7-优化器选错索引"><span>7. 优化器选错索引</span></a></h3><p>同一条SQL有时候查询用到了索引，有时候却没用到索引，这是咋回事？ 这可能是优化器选择的结果，会根据表中数据量选择是否使用索引。 <img src="https://javabaguwen.com/img/失效选错.png" alt="image-20220629234641204.png" loading="lazy"> 当表中大部分name都是一灯，这时候用name=&#39;一灯&#39;做查询，还会不会用到索引呢？ 索引优化器会认为，用索引还不如全表扫描来得快，干脆不用索引了。 <img src="https://javabaguwen.com/img/失效选错2.png" alt="image-20220629234900354.png" loading="lazy"> 当然我们认为优化器优化的不对，也可以使用<strong>force index</strong>强制使用索引。 <img src="https://javabaguwen.com/img/失效选错3.png" alt="image-20220629235137298.png" loading="lazy"></p><h2 id="知识点总结" tabindex="-1"><a class="header-anchor" href="#知识点总结"><span>知识点总结：</span></a></h2><figure><img src="https://javabaguwen.com/img/索引失效总结.png" alt="image-20220630171538701.png" tabindex="0" loading="lazy"><figcaption>image-20220630171538701.png</figcaption></figure>',38),l=[t];function p(o,r){return e(),n("div",null,l)}const g=a(i,[["render",p],["__file","expire.html.vue"]]),m=JSON.parse('{"path":"/mysql/expire.html","title":"","lang":"zh-CN","frontmatter":{"description":"工作中，经常遇到这样的问题，我明明在MySQL表上面加了索引，为什么执行SQL查询的时候却没有用到索引？ 同一条SQL有时候查询用到了索引，有时候却没用到索引，这是咋回事？ 原因可能是索引失效了，失效的原因有以下几种，看你有没有踩过类似的坑？ 1. 数据准备： 有这么一张用户表，在name字段上建个索引： 2. Explain详解： 想要查看一条SQL...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/mysql/expire.html"}],["meta",{"property":"og:site_name","content":"Java八股文网"}],["meta",{"property":"og:description","content":"工作中，经常遇到这样的问题，我明明在MySQL表上面加了索引，为什么执行SQL查询的时候却没有用到索引？ 同一条SQL有时候查询用到了索引，有时候却没用到索引，这是咋回事？ 原因可能是索引失效了，失效的原因有以下几种，看你有没有踩过类似的坑？ 1. 数据准备： 有这么一张用户表，在name字段上建个索引： 2. Explain详解： 想要查看一条SQL..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://javabaguwen.com/img/explain%E8%AF%A6%E8%A7%A3.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-19T04:16:51.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2024-05-19T04:16:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"https://javabaguwen.com/img/explain%E8%AF%A6%E8%A7%A3.png\\",\\"https://javabaguwen.com/img/explain-type%E7%B1%BB%E5%9E%8B.png\\",\\"https://javabaguwen.com/img/%E7%B4%A2%E5%BC%95%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A21.png\\",\\"https://javabaguwen.com/img/%E7%B4%A2%E5%BC%95%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A22.png\\",\\"https://javabaguwen.com/img/like1.png\\",\\"https://javabaguwen.com/img/like2.png\\",\\"https://javabaguwen.com/img/%E5%A4%B1%E6%95%88or.png\\",\\"https://javabaguwen.com/img/%E5%A4%B1%E6%95%88%E8%81%94%E5%90%88%E7%B4%A2%E5%BC%95.png\\",\\"https://javabaguwen.com/img/%E5%A4%B1%E6%95%88%E8%AE%A1%E7%AE%97.png\\",\\"https://javabaguwen.com/img/%E5%A4%B1%E6%95%88%E5%87%BD%E6%95%B0.png\\",\\"https://javabaguwen.com/img/%E5%A4%B1%E6%95%88%E9%80%89%E9%94%99.png\\",\\"https://javabaguwen.com/img/%E5%A4%B1%E6%95%88%E9%80%89%E9%94%992.png\\",\\"https://javabaguwen.com/img/%E5%A4%B1%E6%95%88%E9%80%89%E9%94%993.png\\",\\"https://javabaguwen.com/img/%E7%B4%A2%E5%BC%95%E5%A4%B1%E6%95%88%E6%80%BB%E7%BB%93.png\\"],\\"dateModified\\":\\"2024-05-19T04:16:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 数据准备：","slug":"_1-数据准备","link":"#_1-数据准备","children":[]},{"level":2,"title":"2. Explain详解：","slug":"_2-explain详解","link":"#_2-explain详解","children":[]},{"level":2,"title":"3. 失效原因","slug":"_3-失效原因","link":"#_3-失效原因","children":[{"level":3,"title":"1. 数据类型隐式转换","slug":"_1-数据类型隐式转换","link":"#_1-数据类型隐式转换","children":[]},{"level":3,"title":"2. 模糊查询 like 以%开头","slug":"_2-模糊查询-like-以-开头","link":"#_2-模糊查询-like-以-开头","children":[]},{"level":3,"title":"3. or前后没有同时使用索引","slug":"_3-or前后没有同时使用索引","link":"#_3-or前后没有同时使用索引","children":[]},{"level":3,"title":"4. 联合索引，没有使用第一列索引","slug":"_4-联合索引-没有使用第一列索引","link":"#_4-联合索引-没有使用第一列索引","children":[]},{"level":3,"title":"5. 在索引字段进行计算操作","slug":"_5-在索引字段进行计算操作","link":"#_5-在索引字段进行计算操作","children":[]},{"level":3,"title":"6. 在索引字段字段上使用函数","slug":"_6-在索引字段字段上使用函数","link":"#_6-在索引字段字段上使用函数","children":[]},{"level":3,"title":"7. 优化器选错索引","slug":"_7-优化器选错索引","link":"#_7-优化器选错索引","children":[]}]},{"level":2,"title":"知识点总结：","slug":"知识点总结","link":"#知识点总结","children":[]}],"git":{"createdTime":1715700741000,"updatedTime":1716092211000,"contributors":[{"name":"Yideng","email":"oointer@163.com","commits":2}]},"readingTime":{"minutes":3.3,"words":991},"filePathRelative":"mysql/expire.md","localizedDate":"2024年5月14日","autoDesc":true}');export{g as comp,m as data};
